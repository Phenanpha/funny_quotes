import 'dart:math';

import 'package:flutter/cupertino.dart';
import 'package:flutter/material.dart';

void main() {
  runApp(const FunnyQuotesApp());
}

class FunnyQuotesApp extends StatelessWidget {
  const FunnyQuotesApp({super.key});

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Flutter Demo',
      theme: ThemeData(
        colorScheme: ColorScheme.fromSeed(seedColor: Colors.deepPurple),
        useMaterial3: true,
      ),
      home: HomePage(),
    );
  }
}

class HomePage extends StatefulWidget {
  HomePage({super.key});

  @override
  State<HomePage> createState() => _HomePageState();
}

class _HomePageState extends State<HomePage> {
  static const List<String> quoteList = [
    '‡πÅ‡∏Ñ‡πà‡πÄ‡∏ó‡∏≠‡∏™‡πà‡∏á‡∏¢‡∏¥‡πâ‡∏°‡∏°‡∏≤ ‡πÉ‡∏à‡∏â‡∏±‡∏ô‡∏Å‡πá‡πÅ‡∏ó‡∏ö‡∏•‡∏∞‡∏•‡∏≤‡∏¢ü§™ü§™ü§™',
    '‡∏ñ‡∏∂‡∏á‡πÄ‡∏£‡∏≤‡∏à‡∏∞‡πÑ‡∏°‡πà‡∏™‡∏π‡∏á ‡πÅ‡∏ï‡πà‡πÄ‡∏£‡∏≤‡∏à‡∏π‡∏á‡∏°‡∏∑‡∏≠‡πÄ‡∏ò‡∏≠‡πÑ‡∏î‡πâ‡∏ô‡∏∞ üíï',
    '‡∏≠‡∏Å‡∏´‡∏±‡∏Å ‡∏Ñ‡∏∑‡∏≠ ‡∏õ‡∏£‡∏∞‡∏™‡∏ö‡∏Å‡∏≤‡∏£‡∏ì‡πåüòé ‡∏Ç‡∏∂‡πâ‡∏ô‡∏Ñ‡∏≤‡∏ô ‡∏Ñ‡∏∑‡∏≠ ‡∏ä‡∏∞‡∏ï‡∏≤‡∏Å‡∏£‡∏£‡∏°üôÑü§î',
    '‡∏ñ‡∏∂‡∏á‡πÄ‡∏ã‡πÄ‡∏ß‡πà‡∏ô‡∏à‡∏∞‡πÑ‡∏°‡πà‡πÉ‡∏™‡πà‡∏ñ‡∏∏‡∏á ‡πÅ‡∏ï‡πà‡πÄ‡∏£‡∏≤‡πÉ‡∏™‡πà‡πÉ‡∏à‡∏ô‡∏∞ ^ ^',
    '‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏ß‡∏á‡∏™‡∏ô‡∏ó‡∏ô‡∏≤ ‡∏Å‡πá‡∏ñ‡∏π‡∏Å‡∏ô‡∏¥‡∏ô‡∏ó‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏õ‡∏Å‡∏ï‡∏¥',
    '‡∏≠‡∏¢‡∏π‡πà‡∏î‡∏µ‡∏î‡∏µ‡∏Å‡πá‡πÇ‡∏™‡∏î ‡πÅ‡∏ï‡πà‡∏≠‡∏¢‡∏π‡πà‡πÇ‡∏™‡∏î‡πÇ‡∏™‡∏î‡∏Å‡πá‡∏î‡∏µ',
    '‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÄ‡∏à‡πâ‡∏≤‡∏ä‡∏π‡πâ ‡πÅ‡∏ï‡πà‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏Ñ‡∏π‡πà‡∏°‡∏±‡∏ô‡πÄ‡∏¢‡∏≠‡∏∞',
  ];
  static const List<Color> colorList = [
    Colors.green,
    Colors.yellow,
    Colors.deepOrangeAccent,
    Colors.red,
    Colors.pink,
    Colors.greenAccent,
    Colors.lightBlueAccent
  ];
  var _quote = quoteList[0];
  var color = colorList[0];
  var quoteBefore = 0;

  void _handleClickGo() {
    var rand =   Random();
    var ran = rand.nextInt(quoteList.length);
    setState(() {

      if (quoteBefore != ran) {
        quoteBefore = ran;
        _quote = quoteList[quoteBefore];
      } else {
        for (int i = 0;; i++) {
          ran = rand.nextInt(quoteList.length);
          if (quoteBefore != ran) {
            quoteBefore = ran;
            _quote = quoteList[quoteBefore];
            break;
          }
        }
      }
      var randomColor = rand.nextInt(colorList.length);
      color = colorList[randomColor];
    });
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('‡∏Ñ‡∏≥‡∏Ñ‡∏°/‡πÅ‡∏Ñ‡∏õ‡∏ä‡∏±‡πà‡∏ô‡∏Å‡∏ß‡∏ô‡πÜ'),
        centerTitle: true,
      ),
      floatingActionButton: FloatingActionButton(
        onPressed: _handleClickGo,
        child: const Text('‡∏™‡∏∏‡πà‡∏°',textAlign: TextAlign.center,),
      ),
      backgroundColor: Colors.black,
      body: Center(
        child: Padding(
            padding: EdgeInsets.only(left: 0),
            child: Text(
              _quote,
              style: TextStyle(
                color: color,
                fontSize: 80,
                fontStyle: FontStyle.italic,
                fontWeight: FontWeight.w900,
              ),
              textAlign: TextAlign.center,
            )),
      ),
    );
  }
}
